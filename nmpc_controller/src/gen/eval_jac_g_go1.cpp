/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
#define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
#define _CASADI_NAMESPACE_CONCAT(NS, ID) NS##ID
#define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
#define CASADI_PREFIX(ID) eval_jac_g_go1_##ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#if defined(STATIC_LINKED)
#define CASADI_SYMBOL_EXPORT
#else
#define CASADI_SYMBOL_EXPORT __declspec(dllexport)
#endif
#elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#define CASADI_SYMBOL_EXPORT __attribute__((visibility("default")))
#else
#define CASADI_SYMBOL_EXPORT
#endif
#endif

casadi_real casadi_sq(casadi_real x) { return x * x; }

static const casadi_int casadi_s0[40] = {
    36, 1,  0,  36, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
    10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
    24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35};
static const casadi_int casadi_s1[18] = {14, 1, 0, 14, 0, 1,  2,  3,  4,
                                         5,  6, 7, 8,  9, 10, 11, 12, 13};
static const casadi_int casadi_s2[171] = {
    28,  36,  0,   1,   2,   3,   4,   5,  6,  7,  8,  9,  12, 15, 18,  24,
    30,  37,  43,  49,  56,  62,  68,  75, 81, 87, 94, 95, 96, 97, 102, 107,
    110, 112, 114, 116, 120, 126, 132, 0,  1,  2,  3,  4,  5,  6,  7,   8,
    9,   10,  11,  9,   10,  11,  9,   10, 11, 6,  9,  10, 11, 12, 13,  7,
    9,   10,  11,  14,  15,  8,   9,   10, 12, 13, 14, 15, 6,  9,  10,  11,
    16,  17,  7,   9,   10,  11,  18,  19, 8,  9,  10, 16, 17, 18, 19,  6,
    9,   10,  11,  20,  21,  7,   9,   10, 11, 22, 23, 8,  9,  10, 20,  21,
    22,  23,  6,   9,   10,  11,  24,  25, 7,  9,  10, 11, 26, 27, 8,   9,
    10,  24,  25,  26,  27,  0,   1,   2,  3,  4,  5,  10, 11, 3,  4,   5,
    9,   11,  5,   9,   10,  0,   6,   1,  7,  2,  8,  3,  9,  10, 11,  3,
    4,   5,   9,   10,  11,  3,   4,   5,  9,  10, 11};

/* eval_jac_g_go1:(w[36],p[14])->(jac_g[28x36,132nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw,
                     casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a100, a101, a102, a103, a104, a105, a106, a107, a108,
      a109, a11, a110, a111, a112, a113, a114, a115, a116, a117, a118, a119,
      a12, a120, a121, a122, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21,
      a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35,
      a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49,
      a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62,
      a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76,
      a77, a78, a79, a8, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a9,
      a90, a91, a92, a93, a94, a95, a96, a97, a98, a99;
  a0 = -1.;
  if (res[0] != 0) res[0][0] = a0;
  if (res[0] != 0) res[0][1] = a0;
  if (res[0] != 0) res[0][2] = a0;
  if (res[0] != 0) res[0][3] = a0;
  if (res[0] != 0) res[0][4] = a0;
  if (res[0] != 0) res[0][5] = a0;
  a1 = -1.2012000000000000e+01;
  if (res[0] != 0) res[0][6] = a1;
  if (res[0] != 0) res[0][7] = a1;
  if (res[0] != 0) res[0][8] = a1;
  a1 = -3.1714528100000000e-02;
  if (res[0] != 0) res[0][9] = a1;
  a2 = 4.6361409999999998e-04;
  a3 = arg[0] ? arg[0][27] : 0;
  a4 = cos(a3);
  a5 = (a2 * a4);
  a6 = 2.3679520000000000e-04;
  a7 = sin(a3);
  a8 = (a6 * a7);
  a5 = (a5 - a8);
  a8 = (-a5);
  if (res[0] != 0) res[0][10] = a8;
  a8 = arg[0] ? arg[0][28] : 0;
  a9 = sin(a8);
  a10 = (a1 * a9);
  a11 = cos(a8);
  a12 = (a4 * a11);
  a12 = (a6 * a12);
  a10 = (a10 + a12);
  a12 = (a11 * a7);
  a12 = (a2 * a12);
  a10 = (a10 + a12);
  a12 = (-a10);
  if (res[0] != 0) res[0][11] = a12;
  a12 = -4.6361409999999998e-04;
  if (res[0] != 0) res[0][12] = a12;
  a13 = 3.0648510907999987e-01;
  a14 = (a13 * a4);
  a15 = 3.6671000000000002e-05;
  a16 = (a15 * a7);
  a14 = (a14 - a16);
  a16 = (-a14);
  if (res[0] != 0) res[0][13] = a16;
  a16 = (a12 * a9);
  a17 = (a4 * a11);
  a17 = (a15 * a17);
  a16 = (a16 + a17);
  a17 = (a11 * a7);
  a17 = (a13 * a17);
  a16 = (a16 + a17);
  a17 = (-a16);
  if (res[0] != 0) res[0][14] = a17;
  a17 = -2.3679520000000000e-04;
  if (res[0] != 0) res[0][15] = a17;
  a18 = (a15 * a4);
  a19 = 3.3002937628000001e-01;
  a20 = (a19 * a7);
  a18 = (a18 - a20);
  a20 = (-a18);
  if (res[0] != 0) res[0][16] = a20;
  a20 = (a17 * a9);
  a21 = (a4 * a11);
  a21 = (a19 * a21);
  a20 = (a20 + a21);
  a21 = (a11 * a7);
  a21 = (a15 * a21);
  a20 = (a20 + a21);
  a21 = (-a20);
  if (res[0] != 0) res[0][17] = a21;
  a21 = arg[1] ? arg[1][0] : 0;
  a22 = (-a21);
  if (res[0] != 0) res[0][18] = a22;
  a23 = arg[1] ? arg[1][3] : 0;
  a24 = (a23 * a9);
  a25 = arg[1] ? arg[1][4] : 0;
  a26 = (a25 * a11);
  a27 = arg[0] ? arg[0][29] : 0;
  a28 = sin(a27);
  a29 = (a26 * a28);
  a24 = (a24 + a29);
  a24 = (a24 * a21);
  if (res[0] != 0) res[0][19] = a24;
  a24 = cos(a27);
  a29 = (a25 * a24);
  a29 = (a29 * a21);
  if (res[0] != 0) res[0][20] = a29;
  a29 = (a23 * a21);
  a29 = (-a29);
  if (res[0] != 0) res[0][21] = a29;
  a29 = 1.;
  if (res[0] != 0) res[0][22] = a29;
  if (res[0] != 0) res[0][23] = a0;
  a30 = (-a21);
  if (res[0] != 0) res[0][24] = a30;
  a31 = arg[1] ? arg[1][2] : 0;
  a32 = (a31 * a9);
  a33 = (a25 * a11);
  a34 = (a33 * a24);
  a32 = (a32 + a34);
  a32 = (a32 * a21);
  a32 = (-a32);
  if (res[0] != 0) res[0][25] = a32;
  a32 = (a25 * a28);
  a32 = (a32 * a21);
  if (res[0] != 0) res[0][26] = a32;
  a32 = (a31 * a21);
  if (res[0] != 0) res[0][27] = a32;
  if (res[0] != 0) res[0][28] = a29;
  if (res[0] != 0) res[0][29] = a0;
  a32 = (-a21);
  if (res[0] != 0) res[0][30] = a32;
  a34 = (a23 * a24);
  a35 = (a31 * a28);
  a34 = (a34 - a35);
  a35 = (a11 * a34);
  a35 = (a35 * a21);
  if (res[0] != 0) res[0][31] = a35;
  a35 = (a31 * a24);
  a36 = (a23 * a28);
  a35 = (a35 + a36);
  a35 = (a35 * a21);
  a35 = (-a35);
  if (res[0] != 0) res[0][32] = a35;
  a35 = arg[1] ? arg[1][1] : 0;
  a36 = (-a35);
  if (res[0] != 0) res[0][33] = a36;
  a36 = (-a35);
  if (res[0] != 0) res[0][34] = a36;
  a36 = (-a35);
  if (res[0] != 0) res[0][35] = a36;
  a36 = (-a35);
  if (res[0] != 0) res[0][36] = a36;
  if (res[0] != 0) res[0][37] = a22;
  a36 = arg[1] ? arg[1][6] : 0;
  a37 = (a36 * a9);
  a38 = arg[1] ? arg[1][7] : 0;
  a39 = (a38 * a11);
  a40 = (a39 * a28);
  a37 = (a37 + a40);
  a37 = (a37 * a21);
  if (res[0] != 0) res[0][38] = a37;
  a37 = (a38 * a24);
  a37 = (a37 * a21);
  if (res[0] != 0) res[0][39] = a37;
  a37 = (a36 * a21);
  a37 = (-a37);
  if (res[0] != 0) res[0][40] = a37;
  if (res[0] != 0) res[0][41] = a29;
  if (res[0] != 0) res[0][42] = a0;
  if (res[0] != 0) res[0][43] = a30;
  a37 = arg[1] ? arg[1][5] : 0;
  a40 = (a37 * a9);
  a41 = (a38 * a11);
  a42 = (a41 * a24);
  a40 = (a40 + a42);
  a40 = (a40 * a21);
  a40 = (-a40);
  if (res[0] != 0) res[0][44] = a40;
  a40 = (a38 * a28);
  a40 = (a40 * a21);
  if (res[0] != 0) res[0][45] = a40;
  a40 = (a37 * a21);
  if (res[0] != 0) res[0][46] = a40;
  if (res[0] != 0) res[0][47] = a29;
  if (res[0] != 0) res[0][48] = a0;
  if (res[0] != 0) res[0][49] = a32;
  a40 = (a36 * a24);
  a42 = (a37 * a28);
  a40 = (a40 - a42);
  a42 = (a11 * a40);
  a42 = (a42 * a21);
  if (res[0] != 0) res[0][50] = a42;
  a42 = (a37 * a24);
  a43 = (a36 * a28);
  a42 = (a42 + a43);
  a42 = (a42 * a21);
  a42 = (-a42);
  if (res[0] != 0) res[0][51] = a42;
  a42 = (-a35);
  if (res[0] != 0) res[0][52] = a42;
  a42 = (-a35);
  if (res[0] != 0) res[0][53] = a42;
  a42 = (-a35);
  if (res[0] != 0) res[0][54] = a42;
  a42 = (-a35);
  if (res[0] != 0) res[0][55] = a42;
  if (res[0] != 0) res[0][56] = a22;
  a42 = arg[1] ? arg[1][9] : 0;
  a43 = (a42 * a9);
  a44 = arg[1] ? arg[1][10] : 0;
  a45 = (a44 * a11);
  a46 = (a45 * a28);
  a43 = (a43 + a46);
  a43 = (a43 * a21);
  if (res[0] != 0) res[0][57] = a43;
  a43 = (a44 * a24);
  a43 = (a43 * a21);
  if (res[0] != 0) res[0][58] = a43;
  a43 = (a42 * a21);
  a43 = (-a43);
  if (res[0] != 0) res[0][59] = a43;
  if (res[0] != 0) res[0][60] = a29;
  if (res[0] != 0) res[0][61] = a0;
  if (res[0] != 0) res[0][62] = a30;
  a43 = arg[1] ? arg[1][8] : 0;
  a46 = (a43 * a9);
  a47 = (a44 * a11);
  a48 = (a47 * a24);
  a46 = (a46 + a48);
  a46 = (a46 * a21);
  a46 = (-a46);
  if (res[0] != 0) res[0][63] = a46;
  a46 = (a44 * a28);
  a46 = (a46 * a21);
  if (res[0] != 0) res[0][64] = a46;
  a46 = (a43 * a21);
  if (res[0] != 0) res[0][65] = a46;
  if (res[0] != 0) res[0][66] = a29;
  if (res[0] != 0) res[0][67] = a0;
  if (res[0] != 0) res[0][68] = a32;
  a46 = (a42 * a24);
  a48 = (a43 * a28);
  a46 = (a46 - a48);
  a48 = (a11 * a46);
  a48 = (a48 * a21);
  if (res[0] != 0) res[0][69] = a48;
  a48 = (a43 * a24);
  a49 = (a42 * a28);
  a48 = (a48 + a49);
  a48 = (a48 * a21);
  a48 = (-a48);
  if (res[0] != 0) res[0][70] = a48;
  a48 = (-a35);
  if (res[0] != 0) res[0][71] = a48;
  a48 = (-a35);
  if (res[0] != 0) res[0][72] = a48;
  a48 = (-a35);
  if (res[0] != 0) res[0][73] = a48;
  a48 = (-a35);
  if (res[0] != 0) res[0][74] = a48;
  if (res[0] != 0) res[0][75] = a22;
  a22 = arg[1] ? arg[1][12] : 0;
  a48 = (a22 * a9);
  a49 = arg[1] ? arg[1][13] : 0;
  a50 = (a49 * a11);
  a51 = (a50 * a28);
  a48 = (a48 + a51);
  a48 = (a48 * a21);
  if (res[0] != 0) res[0][76] = a48;
  a48 = (a49 * a24);
  a48 = (a48 * a21);
  if (res[0] != 0) res[0][77] = a48;
  a48 = (a22 * a21);
  a48 = (-a48);
  if (res[0] != 0) res[0][78] = a48;
  if (res[0] != 0) res[0][79] = a29;
  if (res[0] != 0) res[0][80] = a0;
  if (res[0] != 0) res[0][81] = a30;
  a30 = arg[1] ? arg[1][11] : 0;
  a48 = (a30 * a9);
  a51 = (a49 * a11);
  a52 = (a51 * a24);
  a48 = (a48 + a52);
  a48 = (a48 * a21);
  a48 = (-a48);
  if (res[0] != 0) res[0][82] = a48;
  a48 = (a49 * a28);
  a48 = (a48 * a21);
  if (res[0] != 0) res[0][83] = a48;
  a48 = (a30 * a21);
  if (res[0] != 0) res[0][84] = a48;
  if (res[0] != 0) res[0][85] = a29;
  if (res[0] != 0) res[0][86] = a0;
  if (res[0] != 0) res[0][87] = a32;
  a32 = (a22 * a24);
  a0 = (a30 * a28);
  a32 = (a32 - a0);
  a0 = (a11 * a32);
  a0 = (a0 * a21);
  if (res[0] != 0) res[0][88] = a0;
  a0 = (a30 * a24);
  a48 = (a22 * a28);
  a0 = (a0 + a48);
  a0 = (a0 * a21);
  a0 = (-a0);
  if (res[0] != 0) res[0][89] = a0;
  a0 = (-a35);
  if (res[0] != 0) res[0][90] = a0;
  a0 = (-a35);
  if (res[0] != 0) res[0][91] = a0;
  a0 = (-a35);
  if (res[0] != 0) res[0][92] = a0;
  a35 = (-a35);
  if (res[0] != 0) res[0][93] = a35;
  if (res[0] != 0) res[0][94] = a29;
  if (res[0] != 0) res[0][95] = a29;
  if (res[0] != 0) res[0][96] = a29;
  a35 = sin(a3);
  a0 = arg[0] ? arg[0][35] : 0;
  a48 = (a21 / a11);
  a52 = (a9 * a48);
  a53 = (a0 * a52);
  a53 = (a35 * a53);
  a3 = cos(a3);
  a54 = arg[0] ? arg[0][34] : 0;
  a55 = (a9 * a48);
  a56 = (a54 * a55);
  a56 = (a3 * a56);
  a53 = (a53 - a56);
  a53 = (a53 + a29);
  if (res[0] != 0) res[0][97] = a53;
  a53 = (a0 * a21);
  a53 = (a3 * a53);
  a56 = (a54 * a21);
  a56 = (a35 * a56);
  a53 = (a53 + a56);
  if (res[0] != 0) res[0][98] = a53;
  a53 = (a21 / a11);
  a56 = (a0 * a53);
  a56 = (a35 * a56);
  a57 = (a54 * a53);
  a57 = (a3 * a57);
  a56 = (a56 - a57);
  if (res[0] != 0) res[0][99] = a56;
  a56 = (a54 * a0);
  a57 = (a6 * a21);
  a56 = (a56 * a57);
  a58 = arg[0] ? arg[0][33] : 0;
  a59 = (a58 * a0);
  a60 = -3.6671000000000002e-05;
  a61 = (a60 * a21);
  a59 = (a59 * a61);
  a56 = (a56 + a59);
  a59 = (a58 * a54);
  a62 = 2.7477058097999990e-01;
  a63 = (a62 * a21);
  a59 = (a59 * a63);
  a56 = (a56 - a59);
  a59 = casadi_sq(a54);
  a64 = (a2 * a21);
  a65 = (a59 * a64);
  a56 = (a56 + a65);
  a65 = casadi_sq(a58);
  a66 = (a2 * a21);
  a67 = (a65 * a66);
  a56 = (a56 - a67);
  a67 = arg[0] ? arg[0][11] : 0;
  a67 = (a0 - a67);
  a68 = (a19 * a67);
  a56 = (a56 - a68);
  a68 = arg[0] ? arg[0][10] : 0;
  a68 = (a54 - a68);
  a69 = (a15 * a68);
  a56 = (a56 - a69);
  a69 = arg[0] ? arg[0][9] : 0;
  a69 = (a58 - a69);
  a70 = (a6 * a69);
  a56 = (a56 - a70);
  a56 = (a3 * a56);
  a70 = (a54 * a0);
  a71 = (a2 * a21);
  a70 = (a70 * a71);
  a72 = (a58 * a0);
  a73 = 2.9831484817999998e-01;
  a74 = (a73 * a21);
  a72 = (a72 * a74);
  a70 = (a70 - a72);
  a72 = (a58 * a54);
  a75 = (a60 * a21);
  a72 = (a72 * a75);
  a70 = (a70 + a72);
  a72 = casadi_sq(a0);
  a76 = (a6 * a21);
  a77 = (a72 * a76);
  a70 = (a70 + a77);
  a77 = (a17 * a21);
  a78 = (a65 * a77);
  a70 = (a70 + a78);
  a78 = (a15 * a67);
  a70 = (a70 + a78);
  a78 = (a13 * a68);
  a70 = (a70 + a78);
  a78 = (a2 * a69);
  a70 = (a70 + a78);
  a70 = (a35 * a70);
  a56 = (a56 - a70);
  if (res[0] != 0) res[0][100] = a56;
  a56 = (a54 * a0);
  a70 = (a56 * a11);
  a78 = (a2 * a21);
  a70 = (a70 * a78);
  a79 = (a58 * a0);
  a80 = (a79 * a11);
  a73 = (a73 * a21);
  a80 = (a80 * a73);
  a70 = (a70 - a80);
  a80 = (a58 * a54);
  a81 = (a80 * a11);
  a82 = (a60 * a21);
  a81 = (a81 * a82);
  a70 = (a70 + a81);
  a81 = (a6 * a21);
  a83 = (a72 * a81);
  a84 = (a11 * a83);
  a70 = (a70 + a84);
  a84 = (a6 * a21);
  a85 = (a65 * a84);
  a86 = (a11 * a85);
  a70 = (a70 - a86);
  a86 = (a15 * a67);
  a87 = (a11 * a86);
  a70 = (a70 + a87);
  a87 = (a13 * a68);
  a88 = (a11 * a87);
  a70 = (a70 + a88);
  a88 = (a2 * a69);
  a89 = (a11 * a88);
  a70 = (a70 + a89);
  a3 = (a3 * a70);
  a70 = (a58 * a0);
  a89 = (a15 * a21);
  a90 = (a11 * a89);
  a91 = (a70 * a90);
  a92 = (a54 * a0);
  a93 = (a6 * a21);
  a94 = (a11 * a93);
  a95 = (a92 * a94);
  a91 = (a91 - a95);
  a95 = (a58 * a54);
  a62 = (a62 * a21);
  a96 = (a11 * a62);
  a97 = (a95 * a96);
  a91 = (a91 + a97);
  a97 = (a2 * a21);
  a98 = (a59 * a97);
  a99 = (a11 * a98);
  a91 = (a91 - a99);
  a99 = (a2 * a21);
  a65 = (a65 * a99);
  a100 = (a11 * a65);
  a91 = (a91 + a100);
  a100 = (a19 * a67);
  a101 = (a11 * a100);
  a91 = (a91 + a101);
  a101 = (a15 * a68);
  a102 = (a11 * a101);
  a91 = (a91 + a102);
  a102 = (a6 * a69);
  a103 = (a11 * a102);
  a91 = (a91 + a103);
  a35 = (a35 * a91);
  a3 = (a3 - a35);
  if (res[0] != 0) res[0][101] = a3;
  a3 = cos(a8);
  a35 = (a54 * a7);
  a91 = (a35 * a48);
  a103 = (a0 * a4);
  a104 = (a103 * a48);
  a91 = (a91 + a104);
  a91 = (a3 * a91);
  a8 = sin(a8);
  a104 = (a58 * a11);
  a103 = (a103 * a9);
  a104 = (a104 + a103);
  a35 = (a35 * a9);
  a104 = (a104 + a35);
  a104 = (a104 / a11);
  a104 = (a104 / a11);
  a104 = (a104 * a21);
  a48 = (a58 * a48);
  a104 = (a104 - a48);
  a104 = (a8 * a104);
  a91 = (a91 + a104);
  a91 = (-a91);
  if (res[0] != 0) res[0][102] = a91;
  if (res[0] != 0) res[0][103] = a29;
  a91 = (a0 * a4);
  a104 = (a54 * a7);
  a91 = (a91 + a104);
  a91 = (a91 / a11);
  a91 = (a91 / a11);
  a91 = (a91 * a21);
  a91 = (a8 * a91);
  a91 = (-a91);
  if (res[0] != 0) res[0][104] = a91;
  a91 = arg[0] ? arg[0][21] : 0;
  a104 = (a91 * a21);
  a48 = (a22 * a104);
  a35 = arg[0] ? arg[0][22] : 0;
  a103 = (a35 * a21);
  a105 = (a30 * a103);
  a48 = (a48 - a105);
  a105 = arg[0] ? arg[0][19] : 0;
  a106 = (a105 * a21);
  a107 = (a43 * a106);
  a48 = (a48 - a107);
  a107 = arg[0] ? arg[0][18] : 0;
  a108 = (a107 * a21);
  a109 = (a42 * a108);
  a48 = (a48 + a109);
  a109 = arg[0] ? arg[0][16] : 0;
  a110 = (a109 * a21);
  a111 = (a37 * a110);
  a48 = (a48 - a111);
  a111 = arg[0] ? arg[0][15] : 0;
  a112 = (a111 * a21);
  a113 = (a36 * a112);
  a48 = (a48 + a113);
  a113 = arg[0] ? arg[0][12] : 0;
  a114 = (a113 * a21);
  a115 = (a23 * a114);
  a48 = (a48 + a115);
  a115 = arg[0] ? arg[0][13] : 0;
  a116 = (a115 * a21);
  a117 = (a31 * a116);
  a48 = (a48 - a117);
  a48 = (a3 * a48);
  a117 = arg[0] ? arg[0][23] : 0;
  a118 = (a117 * a21);
  a32 = (a32 * a118);
  a119 = (a24 * a103);
  a119 = (a49 * a119);
  a32 = (a32 - a119);
  a119 = (a28 * a104);
  a119 = (a49 * a119);
  a32 = (a32 + a119);
  a119 = arg[0] ? arg[0][20] : 0;
  a120 = (a119 * a21);
  a46 = (a46 * a120);
  a32 = (a32 + a46);
  a46 = (a24 * a106);
  a46 = (a44 * a46);
  a32 = (a32 - a46);
  a46 = (a28 * a108);
  a46 = (a44 * a46);
  a32 = (a32 + a46);
  a46 = arg[0] ? arg[0][17] : 0;
  a121 = (a46 * a21);
  a40 = (a40 * a121);
  a32 = (a32 + a40);
  a40 = (a24 * a110);
  a40 = (a38 * a40);
  a32 = (a32 - a40);
  a40 = (a28 * a112);
  a40 = (a38 * a40);
  a32 = (a32 + a40);
  a40 = arg[0] ? arg[0][14] : 0;
  a122 = (a40 * a21);
  a34 = (a34 * a122);
  a32 = (a32 + a34);
  a28 = (a28 * a114);
  a28 = (a25 * a28);
  a32 = (a32 + a28);
  a24 = (a24 * a116);
  a24 = (a25 * a24);
  a32 = (a32 - a24);
  a32 = (a8 * a32);
  a48 = (a48 - a32);
  if (res[0] != 0) res[0][105] = a48;
  a48 = (a54 * a0);
  a32 = -2.3544267200000080e-02;
  a32 = (a32 * a21);
  a48 = (a48 * a32);
  a24 = (a58 * a0);
  a28 = (a2 * a21);
  a24 = (a24 * a28);
  a48 = (a48 + a24);
  a24 = (a58 * a54);
  a34 = (a6 * a21);
  a24 = (a24 * a34);
  a48 = (a48 - a24);
  a24 = (a15 * a21);
  a72 = (a72 * a24);
  a48 = (a48 + a72);
  a60 = (a60 * a21);
  a59 = (a59 * a60);
  a48 = (a48 + a59);
  a17 = (a17 * a67);
  a48 = (a48 + a17);
  a12 = (a12 * a68);
  a48 = (a48 + a12);
  a1 = (a1 * a69);
  a48 = (a48 + a1);
  a3 = (a3 * a48);
  a78 = (a7 * a78);
  a56 = (a56 * a78);
  a73 = (a7 * a73);
  a79 = (a79 * a73);
  a56 = (a56 - a79);
  a82 = (a7 * a82);
  a80 = (a80 * a82);
  a56 = (a56 + a80);
  a92 = (a92 * a4);
  a92 = (a92 * a93);
  a56 = (a56 - a92);
  a70 = (a70 * a4);
  a70 = (a70 * a89);
  a56 = (a56 + a70);
  a95 = (a95 * a4);
  a95 = (a95 * a62);
  a56 = (a56 + a95);
  a83 = (a7 * a83);
  a56 = (a56 + a83);
  a85 = (a7 * a85);
  a56 = (a56 - a85);
  a98 = (a4 * a98);
  a56 = (a56 - a98);
  a65 = (a4 * a65);
  a56 = (a56 + a65);
  a86 = (a7 * a86);
  a56 = (a56 + a86);
  a100 = (a4 * a100);
  a56 = (a56 + a100);
  a87 = (a7 * a87);
  a56 = (a56 + a87);
  a101 = (a4 * a101);
  a56 = (a56 + a101);
  a88 = (a7 * a88);
  a56 = (a56 + a88);
  a102 = (a4 * a102);
  a56 = (a56 + a102);
  a8 = (a8 * a56);
  a3 = (a3 - a8);
  if (res[0] != 0) res[0][106] = a3;
  if (res[0] != 0) res[0][107] = a29;
  a29 = cos(a27);
  a50 = (a50 * a104);
  a118 = (a11 * a118);
  a104 = (a30 * a118);
  a50 = (a50 - a104);
  a120 = (a11 * a120);
  a104 = (a43 * a120);
  a50 = (a50 - a104);
  a45 = (a45 * a108);
  a50 = (a50 + a45);
  a121 = (a11 * a121);
  a45 = (a37 * a121);
  a50 = (a50 - a45);
  a39 = (a39 * a112);
  a50 = (a50 + a39);
  a122 = (a11 * a122);
  a39 = (a31 * a122);
  a50 = (a50 - a39);
  a26 = (a26 * a114);
  a50 = (a50 + a26);
  a50 = (a29 * a50);
  a27 = sin(a27);
  a118 = (a22 * a118);
  a51 = (a51 * a103);
  a118 = (a118 - a51);
  a120 = (a42 * a120);
  a118 = (a118 + a120);
  a47 = (a47 * a106);
  a118 = (a118 - a47);
  a121 = (a36 * a121);
  a118 = (a118 + a121);
  a41 = (a41 * a110);
  a118 = (a118 - a41);
  a122 = (a23 * a122);
  a118 = (a118 + a122);
  a33 = (a33 * a116);
  a118 = (a118 - a33);
  a118 = (a27 * a118);
  a50 = (a50 - a118);
  if (res[0] != 0) res[0][108] = a50;
  a35 = (a35 * a21);
  a35 = (a49 * a35);
  a117 = (a117 * a21);
  a22 = (a22 * a117);
  a35 = (a35 - a22);
  a119 = (a119 * a21);
  a42 = (a42 * a119);
  a35 = (a35 - a42);
  a105 = (a105 * a21);
  a105 = (a44 * a105);
  a35 = (a35 + a105);
  a46 = (a46 * a21);
  a36 = (a36 * a46);
  a35 = (a35 - a36);
  a109 = (a109 * a21);
  a109 = (a38 * a109);
  a35 = (a35 + a109);
  a115 = (a115 * a21);
  a115 = (a25 * a115);
  a35 = (a35 + a115);
  a40 = (a40 * a21);
  a23 = (a23 * a40);
  a35 = (a35 - a23);
  a29 = (a29 * a35);
  a91 = (a91 * a21);
  a49 = (a49 * a91);
  a30 = (a30 * a117);
  a49 = (a49 - a30);
  a43 = (a43 * a119);
  a49 = (a49 - a43);
  a107 = (a107 * a21);
  a44 = (a44 * a107);
  a49 = (a49 + a44);
  a37 = (a37 * a46);
  a49 = (a49 - a37);
  a111 = (a111 * a21);
  a38 = (a38 * a111);
  a49 = (a49 + a38);
  a113 = (a113 * a21);
  a25 = (a25 * a113);
  a49 = (a49 + a25);
  a31 = (a31 * a40);
  a49 = (a49 - a31);
  a27 = (a27 * a49);
  a29 = (a29 - a27);
  if (res[0] != 0) res[0][109] = a29;
  a29 = (-a21);
  if (res[0] != 0) res[0][110] = a29;
  a29 = 1.2012000000000000e+01;
  if (res[0] != 0) res[0][111] = a29;
  a27 = (-a21);
  if (res[0] != 0) res[0][112] = a27;
  if (res[0] != 0) res[0][113] = a29;
  a27 = (-a21);
  if (res[0] != 0) res[0][114] = a27;
  if (res[0] != 0) res[0][115] = a29;
  a29 = (-a21);
  if (res[0] != 0) res[0][116] = a29;
  a29 = (a54 * a21);
  a27 = (a6 * a29);
  a49 = (a0 * a21);
  a31 = (a2 * a49);
  a27 = (a27 - a31);
  a31 = 3.1714528100000000e-02;
  a27 = (a27 + a31);
  if (res[0] != 0) res[0][117] = a27;
  a61 = (a7 * a61);
  a27 = (a0 * a61);
  a63 = (a7 * a63);
  a31 = (a54 * a63);
  a27 = (a27 - a31);
  a74 = (a4 * a74);
  a31 = (a0 * a74);
  a27 = (a27 - a31);
  a75 = (a4 * a75);
  a31 = (a54 * a75);
  a27 = (a27 + a31);
  a31 = (a58 + a58);
  a77 = (a4 * a77);
  a66 = (a7 * a66);
  a77 = (a77 - a66);
  a77 = (a31 * a77);
  a27 = (a27 + a77);
  a27 = (a27 + a5);
  if (res[0] != 0) res[0][118] = a27;
  a82 = (a11 * a82);
  a27 = (a54 * a82);
  a73 = (a11 * a73);
  a5 = (a0 * a73);
  a27 = (a27 - a5);
  a90 = (a4 * a90);
  a5 = (a0 * a90);
  a27 = (a27 + a5);
  a96 = (a4 * a96);
  a5 = (a54 * a96);
  a27 = (a27 + a5);
  a28 = (a9 * a28);
  a5 = (a0 * a28);
  a27 = (a27 + a5);
  a34 = (a9 * a34);
  a5 = (a54 * a34);
  a27 = (a27 - a5);
  a5 = (a4 * a11);
  a5 = (a5 * a99);
  a99 = (a11 * a7);
  a99 = (a99 * a84);
  a5 = (a5 - a99);
  a31 = (a31 * a5);
  a27 = (a27 + a31);
  a27 = (a27 + a10);
  if (res[0] != 0) res[0][119] = a27;
  a55 = (a7 * a55);
  a55 = (-a55);
  if (res[0] != 0) res[0][120] = a55;
  a55 = (a4 * a21);
  a55 = (-a55);
  if (res[0] != 0) res[0][121] = a55;
  a55 = (a7 * a53);
  a55 = (-a55);
  if (res[0] != 0) res[0][122] = a55;
  a55 = (a6 * a58);
  a27 = (a15 * a54);
  a55 = (a55 + a27);
  a27 = (a19 * a0);
  a55 = (a55 + a27);
  a55 = (a55 * a21);
  a27 = (a13 * a49);
  a55 = (a55 - a27);
  a27 = (a15 * a29);
  a55 = (a55 + a27);
  a55 = (a55 + a2);
  if (res[0] != 0) res[0][123] = a55;
  a57 = (a7 * a57);
  a55 = (a0 * a57);
  a63 = (a58 * a63);
  a55 = (a55 - a63);
  a71 = (a4 * a71);
  a63 = (a0 * a71);
  a55 = (a55 + a63);
  a75 = (a58 * a75);
  a55 = (a55 + a75);
  a75 = (a54 + a54);
  a64 = (a7 * a64);
  a64 = (a75 * a64);
  a55 = (a55 + a64);
  a55 = (a55 + a14);
  if (res[0] != 0) res[0][124] = a55;
  a78 = (a11 * a78);
  a55 = (a0 * a78);
  a82 = (a58 * a82);
  a55 = (a55 + a82);
  a94 = (a4 * a94);
  a82 = (a0 * a94);
  a55 = (a55 - a82);
  a96 = (a58 * a96);
  a55 = (a55 + a96);
  a32 = (a9 * a32);
  a96 = (a0 * a32);
  a55 = (a55 + a96);
  a34 = (a58 * a34);
  a55 = (a55 - a34);
  a60 = (a9 * a60);
  a34 = (a4 * a11);
  a34 = (a34 * a97);
  a60 = (a60 - a34);
  a75 = (a75 * a60);
  a55 = (a55 + a75);
  a55 = (a55 + a16);
  if (res[0] != 0) res[0][125] = a55;
  a52 = (a4 * a52);
  a52 = (-a52);
  if (res[0] != 0) res[0][126] = a52;
  a52 = (a7 * a21);
  if (res[0] != 0) res[0][127] = a52;
  a53 = (a4 * a53);
  a53 = (-a53);
  if (res[0] != 0) res[0][128] = a53;
  a19 = (a19 * a29);
  a2 = (a2 * a58);
  a13 = (a13 * a54);
  a2 = (a2 + a13);
  a13 = (a15 * a0);
  a2 = (a2 + a13);
  a2 = (a2 * a21);
  a15 = (a15 * a49);
  a2 = (a2 + a15);
  a19 = (a19 - a2);
  a19 = (a19 + a6);
  if (res[0] != 0) res[0][129] = a19;
  a57 = (a54 * a57);
  a61 = (a58 * a61);
  a57 = (a57 + a61);
  a71 = (a54 * a71);
  a57 = (a57 + a71);
  a74 = (a58 * a74);
  a57 = (a57 - a74);
  a0 = (a0 + a0);
  a4 = (a4 * a76);
  a4 = (a0 * a4);
  a57 = (a57 + a4);
  a57 = (a57 + a18);
  if (res[0] != 0) res[0][130] = a57;
  a78 = (a54 * a78);
  a73 = (a58 * a73);
  a78 = (a78 - a73);
  a94 = (a54 * a94);
  a78 = (a78 - a94);
  a90 = (a58 * a90);
  a78 = (a78 + a90);
  a54 = (a54 * a32);
  a78 = (a78 + a54);
  a58 = (a58 * a28);
  a78 = (a78 + a58);
  a11 = (a11 * a7);
  a11 = (a11 * a81);
  a9 = (a9 * a24);
  a11 = (a11 + a9);
  a0 = (a0 * a11);
  a78 = (a78 + a0);
  a78 = (a78 + a20);
  if (res[0] != 0) res[0][131] = a78;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_go1(const casadi_real** arg,
                                                   casadi_real** res,
                                                   casadi_int* iw,
                                                   casadi_real* w, int mem) {
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_go1_alloc_mem(void) { return 0; }

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_go1_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_go1_free_mem(int mem) {}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_go1_checkout(void) { return 0; }

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_go1_release(int mem) {}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_go1_incref(void) {}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_go1_decref(void) {}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_go1_n_in(void) {
  return 2;
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_go1_n_out(void) {
  return 1;
}

extern "C" CASADI_SYMBOL_EXPORT casadi_real
eval_jac_g_go1_default_in(casadi_int i) {
  switch (i) {
    default:
      return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_go1_name_in(
    casadi_int i) {
  switch (i) {
    case 0:
      return "w";
    case 1:
      return "p";
    default:
      return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_go1_name_out(
    casadi_int i) {
  switch (i) {
    case 0:
      return "jac_g";
    default:
      return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_go1_sparsity_in(
    casadi_int i) {
  switch (i) {
    case 0:
      return casadi_s0;
    case 1:
      return casadi_s1;
    default:
      return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_go1_sparsity_out(
    casadi_int i) {
  switch (i) {
    case 0:
      return casadi_s2;
    default:
      return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_go1_work(casadi_int* sz_arg,
                                                        casadi_int* sz_res,
                                                        casadi_int* sz_iw,
                                                        casadi_int* sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}
